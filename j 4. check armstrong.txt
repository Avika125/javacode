/*
Take the following as input.

A number
Write a function which returns true if the number is an armstrong number and false otherwise, where Armstrong number is defined as follows.

A positive integer of n digits is called an Armstrong number of order n (order is number of digits) if.

abcd… = pow(a,n) + pow(b,n) + pow(c,n) + pow(d,n) + ….

1634 is an Armstrong number as 1634 = 1^4 + 6^4 + 3^4 + 4^4

371 is an Armstrong number as 371 = 3^3 + 7^3 + 1^3

Input Format
Single line input containing an integer

Constraints
0 < N < 1000000000

Output Format
Print boolean output for each testcase.
"true" if the given number is an Armstrong Number, else print "false".

Sample Input
371
Sample Output
true
*/

import java.util.*;
public class Main {
    public static void main(String args[]) {
Scanner sc = new Scanner(System.in);
int n = sc.nextInt();
System.out.println(Is_Armstrong_numbder(n));
    }
    public static boolean Is_Armstrong_numbder(int n){
        int c = Countofdigit(n);
        int sum = 0;
        int p = n;
        while(n>0){
            int rem = n % 10;
            sum = (int) (sum + Math.pow(rem,c));
            n = n/10;
        }
        if(sum==p){
            return true;
        }
        else{
            return false;
        }
    }
    public static int Countofdigit(int n){
        int count = 0;
        while(n>0){
            n = n/10;
            count++;
        } 
        return count;
    }
}